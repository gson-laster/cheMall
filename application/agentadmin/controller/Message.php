<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/31 0031
 * Time: 下午 8:42
 */

namespace app\agentadmin\controller;
use think\Config;
use think\Db;
use think\Session;

use app\common\model\Message as MessageModel;
use GatewayClient\Gateway;

class Message extends AgentBase {
  protected $service;
  protected $agent_id;
  protected function _initialize () {
    parent::_initialize(); // TODO: Change the autogenerated stub
    if($this->isAgentAdmin()){
      $this->agent_id = Session::get('agent_admin')['id'];
    }else{
      $this->agent_id = Session::get('agent_employee')['agent_id'];
    }
    $this->service = Db::name('agent_employee')->where(['is_service'=>1,'agent_id'=> $this->agent_id])->find();
    //dump(   $this->service );
  }
  
  /**
   * 把消息client_id与uid绑定
   *
   * @param    [type]                   $client_id [消息客户端id]
   *
   * @return   [type]                   [description]
   * @Author   :  slade
   * @DateTime :2017-05-16T10:11:23+080
   */
  public function bindUid ( $client_id ) {
    
    if(!$this->service){
      return $this->ajax(4000, '没有设置客服员工，无法进入客服系统');
    }
    Gateway::$registerAddress = Config::get( 'Message_Register_Address' );
    // 假设用户已经登录，用户uid和群组id在session中
    // client_id与uid绑定
    $res = Gateway::bindUid( $client_id, $this->service['msg_uid'] );
    if ( $res ) {
      return $this->ajax( 2000, '进入消息服务器成功' );
    } else {
      return $this->ajax( 4000, '进入消息服务器失败，请刷新重试' );
    }
  }
  
  /**
   * 获取未读消息列表
   * @author: slide
   *
   */
  public function get_not_read_message(){
    if(!$this->service){
      return $this->ajax(4000, '没有设置客服员工，无法进入客服系统');
    }
    $message_list = Db::name('message_consignee')->alias('mc')->field(['mc.sender_id','u.nickname','u.phone','u.userimg'])->join('__USER__ u', 'u.id=mc.sender_id','LEFT')->where(['consignee_id'=>$this->service['msg_uid'], 'message_status' => 0])->group('sender_id')->order('create_time DESC')->select();
    $code = $message_list ? 2000 : 4000;
    $msg  = $message_list ? '新消息获取成功' : '新消息获取失败';
    return $this->ajax($code, $msg, '', $message_list);
  }
  
  /**
   * 获取联系人列表
   * @author: slide
   *
   */
  public function getContact(){
    if(!$this->service){
      return $this->ajax(4000, '没有设置客服员工，无法进入客服系统');
    }
    $contact = Db::name('message_consignee')->alias('mc')->field(['mc.sender_id','u.nickname','u.phone','u.userimg'])->join('__USER__ u','u.id=mc.sender_id','LEFT')->where("consignee_id='{$this->service['msg_uid']}'")->group("sender_id")->order('create_time DESC')->select();
    $code = $contact ? 2000 : 4000;
    $msg  = $contact ? '新消息获取成功' : '新消息获取失败';
    return $this->ajax($code, $msg, '', $contact);
  }
}
