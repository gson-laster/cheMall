<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/19 0019
 * Time: 下午 4:31
 */

namespace app\common\hook;
use app\common\model\Actively;
use think\Controller;
use think\Db;
/**
 * 用户开通代理钩子处理
 * Class Agent
 * @package app\common\hook
 */
class Agent extends Controller {
  
  protected $activelyMdl;
  
  protected function _initialize () {
    parent::_initialize(); // TODO: Change the autogenerated stub
    $this->activelyMdl = new Actively();
  }
  
  /**
   * 申请开通代理成功
   * @author: slide
   * @param array $params
   */
  public function addSuccess($apply_recharge, $userId){
    $this->buildActive($apply_recharge, $userId, 'Agent@addSuccess');
  }
  
  /**
   * 确认完成代理申请
   * @author: slide
   * @param array $params
   *
   */
  public function confirm($id, $res){
    $this->buildActive($id, $res['user_id'], 'Agent@confirm');
  }
  
  /**
   * 退回给客户
   * @author: slide
   * @param array $params
   *
   */
  public function returnToUser($res){
    $this->buildActive($res['id'], $res['user_id'],'Agent@returnToUser');
  }
  
  /**
   * 获取活动
   * @author: slide
   * @param array $where
   * @return mixed
   *
   */
  public function getActively($where = []){
    return $this->activelyMdl->where($where)->where('status', 1)->select();
  }
  
  /**
   * 构建活动
   * @author: slide
   * @param $userId
   * @param $hook
   * @throws \think\Exception
   * @throws \think\exception\PDOException
   *
   */
  public function buildActive($orderId, $userId, $hook){
    $active_res = $this->getActively(['hook' => $hook]);
    foreach ($active_res as $k => $v){
      list($table_namse, $field) = explode('@', $v['field']);
      if($table_namse == 'user' && $field == 'user_vb'){
        if($v['first_action']){
          $this->OpenAgentFirst($orderId, $userId) && accountLog($userId, $v['value'], 1, $v['title']);
        }else{
          accountLog($userId, $v['value'], 1, $v['title']);
        }
      }else if($table_namse == 'user' && $field == 'agent_type'){
        $agent_type = Db::name($table_namse)->where('id', $userId)->value($field);
        if($agent_type < $v['value'] && $agent_type != 0) continue;
        if($v['first_action']) {
          $this->OpenAgentFirst($orderId, $userId) && Db::name( $table_namse )->where( 'id', $userId )->update( [ $field => $v[ 'value' ] ] );
        }else{
          Db::name( $table_namse )->where( 'id', $userId )->update( [ $field => $v[ 'value' ] ] );
        }
      }
    }
  }
  
  /**
   * 用户是否首次申请代理
   * @author: slide
   * @param     $orderId
   * @param int $pay_status
   * @param int $order_status
   * @return bool
   * @throws \think\db\exception\DataNotFoundException
   * @throws \think\db\exception\ModelNotFoundException
   * @throws \think\exception\DbException
   *
   */
  public function OpenAgentFirst($orderId, $userId){
    $flag = false;
    $apply_res = Db::name('agent_apply')->where("user_id", $userId)->select();
    
    $apply_res_key = array_keys(convert_arr_key($apply_res, 'id'));
    
    if(in_array($orderId, $apply_res_key)){
      $flag = false;
    }else{
      $flag = true;
    }
    
    return $flag;
  }
}
